local g = import '../lib/base.libsonnet';
local m = import '../lib/modifiers.libsonnet';

local rawMatches = [
  # Punctuation
  {
    trigger: '?',
    replace: '¬ø',
  },
  {
    trigger: '!',
    replace: '¬°',
  },
  {
    triggers: ['?!','!?'],
    replace: '‚ÄΩ',
  },

  # Marks
  {
    trigger: 'tm',
    replace: '‚Ñ¢',
  },
  {
    trigger: 'cr',
    replace: '¬©',
  },

  # Hbar
  {
    trigger: 'hbar',
    replace: '‚Ñè',
  },

  # Fancy E
  {
    triggers: ['euler','e'],
    replace: 'ùëí',
  },

  # Fancy L
  {
    triggers: ['ell','l'],
    replace: '‚Ñì',
  },
  {
    triggers: ['Ell','L'],
    replace: '‚Ñí',
  },

  # Fancy plus
  {
    trigger: '+',
    replace: '‚ú†',
  },
];

std.manifestYamlDoc(
  {
    name: g.processFilename(std.thisFile),
    parent: g.PARENT,

    matches: g.processTriggers(rawMatches, g.PRE, g.POST),
  }
)
